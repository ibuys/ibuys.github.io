I"3<p>As a general rule, I really don’t like consultants.  Not that I have anything against any of them personally, it’s just that as a whole, most consultants I’ve worked with are no better than our own engineers and administrators.  The exception that proves this rule is our recent VMWare consultant, who was both knowledgeable and willing to teach.  Bringing in an outside technical consultant to design, install, or configure a software system is admitting that not only do we as a company not know enough about the software, we don’t plan on learning enough about it either.  Bringing in a consultant is investing in that companies knowledge, and not investing in our own.</p>

<p>It costs quite a bit of money to bring in a consultant, they do not come cheap.  For one, if there is no one local you have to pay for travel and lodging.  Most consultants charge by the hour, so you have  billable time bringing them up to speed on what you new system is and what you are trying to accomplish with it so they can start helping you.  If you are bringing in a consultant for an IBM product, you need to be prepared to sit on the phone with him and put in several PMRs.</p>

<p>I would rather spend the equivalent amount of money on sending employees to training than on a consultant.  Once a consultant leaves after performing their task, the regular employees who maintain the system are on their own, and without the appropriate training they are often lost.  When the consultant leaves, he takes all of his expertise with him.  Expertise that was used to set up a system that he has no personal stake in, other than his reputation as a consultant, which may or may not matter depending on the relationship between the two companies.  When you send employees to training on a new software product or technology, you are building that same expertise internally.  Initially, the internal expertise will not be on the same level as that of the consultants, but over time as the employees administer the system that they built, their expertise grows deeper and stronger.</p>

<p>Teams that are experts on the systems they are in charge of can build on that system.  They can recognize shortcomings and bottlenecks, and troubleshoot problems faster than on systems that they simply maintain.  They know the internal architecture of the system, not only how it works, but why it works.</p>

<p>In the Navy, I was lucky enough to work for a Senior Chief who believed that we needed to be experts on the systems we managed, because once we were out to sea, no one was going to come out to help us.  He sent us to training, or brought training in, two or three times a year, for one to two week sessions on everything from Unix to Exchange.  This same mindset could apply equally as well to companies who operate 24x7 infrastructures.  Once the system crashes at 2AM, there’s not going to be anyone there to help you, your team will be on their own, and if you have not invested in the team, it’s going to be a very long night.</p>

<p>If your company is not going to invest in you, you need to invest in yourself.</p>
:ET